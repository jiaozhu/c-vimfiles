" ###### vim-trailing-whitespace
let g:extra_whitespace_ignored_filetypes = ['unite', 'mkd', 'diff', 'ctrlsf', 'git', 'qf']
map <leader>, :FixWhitespace<cr>

" ###### nerdcommenter
" <leader>cc 注释选中内容
" <leader>cu 取消选中注释
" <leader>c$ 从当前光标开始到行尾注释掉
let g:NERDCustomDelimiters = {
    \ 'c': { 'leftAlt': '/*','rightAlt': '*/', 'left': '//', 'right': '' },
    \ }
let NERD_cpp_alt_style=1
let NERD_c_alt_style=1
let g:NERDSpaceDelims=1

" ###### ctrlpvim
let g:ctrlp_map = '<leader>f'
let g:ctrlp_cmd = 'CtrlP'
" map <leader>f :CtrlP<CR>
map <leader>b :CtrlPBuffer<CR>
set wildignore+=*/.git/*,*/.hg/*,*/.svn/*        " Linux/MacOSX
let g:ctrlp_custom_ignore = {
    \ 'dir':  '\v[\/]\.(git|hg|svn|rvm)$',
    \ 'file': '\v\.(exe|so|dll|zip|tar|tar.gz|pyc|a)$|tags',
    \ 'link': 'SOME_BAD_SYMBOLIC_LINKS',
    \ }
let g:ctrlp_working_path_mode=0
let g:ctrlp_match_window_bottom=1
let g:ctrlp_max_height=15
let g:ctrlp_match_window_reversed=0
let g:ctrlp_mruf_max=500
let g:ctrlp_follow_symlinks=1
let g:ctrlp_mruf_default_order = 1
" " 如果安装了ag, 使用ag
"  if executable('ag')
"   " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
"    let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
"   " ag is fast enough that CtrlP doesn't need to cache
"    let g:ctrlp_use_caching = 0
"  endif

" ##### nerdtree
" map <leader>n :NERDTreeToggle<CR>
noremap <silent> <Leader>n :NERDTreeFind<cr>
let NERDTreeHighlightCursorline=1
let NERDTreeIgnore=[ '\.pyc$', '\.pyo$', '\.obj$', '\.o$', '\.so$', '\.egg$', '^\.git$', '^\.svn$', '^\.hg$' ]
"close vim if the only window left open is a NERDTree
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | end
" s/v 分屏打开文件
let g:NERDTreeMapOpenSplit = 's'
let g:NERDTreeMapOpenVSplit = 'v'
let g:NERDTreeMouseMode = 3
let g:NERDTreeWinSize = 50
let g:NERDTreeDirArrows=1
let g:NERDTreeChDirMode=2
"打开NERDTree,定位到当前文件
noremap <silent> <Leader>nf :NERDTreeFind<cr>
" autocmd vimenter *.go NERDTreeFind
" 选中目录，按 ma 可以在目录中新建文件
